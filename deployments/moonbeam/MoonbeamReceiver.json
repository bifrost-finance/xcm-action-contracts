{
  "address": "0x2952fD1b6dD54930B99eF3070e6b700f18f44066",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "derivativeAddress",
          "type": "address"
        }
      ],
      "name": "SetDerivativeAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "scriptTrigger",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "layerZeroFee",
          "type": "uint256"
        }
      ],
      "name": "SetLayerZeroFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "scriptTrigger",
          "type": "address"
        }
      ],
      "name": "SetScriptTrigger",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MANTA",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VMANTA",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "callerToDerivativeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_adapterParams",
          "type": "bytes"
        }
      ],
      "name": "claimManta",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_adapterParams",
          "type": "bytes"
        }
      ],
      "name": "claimVManta",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "destChainId",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "layerZeroFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mantaOFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mantaPacificSlpx",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        },
        {
          "internalType": "bytes32",
          "name": "from",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "onOFTReceived",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "scriptTrigger",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "setDerivativeAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_layerZeroFee",
          "type": "uint256"
        }
      ],
      "name": "setLayerZeroFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_mantaPacificSlpx",
          "type": "address"
        }
      ],
      "name": "setRemoteContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_scriptTrigger",
          "type": "address"
        }
      ],
      "name": "setScriptTrigger",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slpx",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vMantaProxyOFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x16580102309013a642298ffc6faf5071571e288485b4dd89b7719265327b5667",
  "receipt": {
    "to": null,
    "from": "0x4597C97a43dFBb4a398E2b16AA9cE61f90d801DD",
    "contractAddress": "0x2952fD1b6dD54930B99eF3070e6b700f18f44066",
    "transactionIndex": 1,
    "gasUsed": "3055368",
    "logsBloom": "0x
    "blockHash": "0xd3f165b3d6401587fcb9cd20e669332a0010f2df61e77025801de21cb312354a",
    "transactionHash": "0x16580102309013a642298ffc6faf5071571e288485b4dd89b7719265327b5667",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 8180132,
        "transactionHash": "0x16580102309013a642298ffc6faf5071571e288485b4dd89b7719265327b5667",
        "address": "0x2952fD1b6dD54930B99eF3070e6b700f18f44066",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000004597c97a43dfbb4a398e2b16aa9ce61f90d801dd"
        ],
        "data": "0x",
        "logIndex": 8,
        "blockHash": "0xd3f165b3d6401587fcb9cd20e669332a0010f2df61e77025801de21cb312354a"
      }
    ],
    "blockNumber": 8180132,
    "cumulativeGasUsed": "3834536",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 9,
  "solcInputHash": "7455f89a748ed6c3958fab66639c6845",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"derivativeAddress\",\"type\":\"address\"}],\"name\":\"SetDerivativeAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"scriptTrigger\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"layerZeroFee\",\"type\":\"uint256\"}],\"name\":\"SetLayerZeroFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"scriptTrigger\",\"type\":\"address\"}],\"name\":\"SetScriptTrigger\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MANTA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VMANTA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"callerToDerivativeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"claimManta\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"claimVManta\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"layerZeroFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mantaOFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mantaPacificSlpx\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"from\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"onOFTReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scriptTrigger\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setDerivativeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_layerZeroFee\",\"type\":\"uint256\"}],\"name\":\"setLayerZeroFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mantaPacificSlpx\",\"type\":\"address\"}],\"name\":\"setRemoteContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_scriptTrigger\",\"type\":\"address\"}],\"name\":\"setScriptTrigger\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slpx\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vMantaProxyOFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MoonbeamReceiver.sol\":\"MoonbeamReceiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Create2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Create2.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\\n * `CREATE2` can be used to compute in advance the address where a smart\\n * contract will be deployed, which allows for interesting new mechanisms known\\n * as 'counterfactual interactions'.\\n *\\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\\n * information.\\n */\\nlibrary Create2 {\\n    /**\\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\\n     * will be deployed can be known in advance via {computeAddress}.\\n     *\\n     * The bytecode for a contract can be obtained from Solidity with\\n     * `type(contractName).creationCode`.\\n     *\\n     * Requirements:\\n     *\\n     * - `bytecode` must not be empty.\\n     * - `salt` must have not been used for `bytecode` already.\\n     * - the factory must have a balance of at least `amount`.\\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\\n     */\\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\\n        require(address(this).balance >= amount, \\\"Create2: insufficient balance\\\");\\n        require(bytecode.length != 0, \\\"Create2: bytecode length is zero\\\");\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\\n        }\\n        require(addr != address(0), \\\"Create2: Failed on deploy\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\\n     * `bytecodeHash` or `salt` will result in a new destination address.\\n     */\\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\\n        return computeAddress(salt, bytecodeHash, address(this));\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\\n     */\\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40) // Get free memory pointer\\n\\n            // |                   | \\u2193 ptr ...  \\u2193 ptr + 0x0B (start) ...  \\u2193 ptr + 0x20 ...  \\u2193 ptr + 0x40 ...   |\\n            // |-------------------|---------------------------------------------------------------------------|\\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\\n            // | 0xFF              |            FF                                                             |\\n            // |-------------------|---------------------------------------------------------------------------|\\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\\n            // | keccak(start, 85) |            \\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191 |\\n\\n            mstore(add(ptr, 0x40), bytecodeHash)\\n            mstore(add(ptr, 0x20), salt)\\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\\n            mstore8(start, 0xff)\\n            addr := keccak256(start, 85)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/DerivativeContract.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract DerivativeContract is ReentrancyGuard {\\n    address public receiver;\\n\\n    event Withdraw(address caller, address to, address token, uint256 amount);\\n\\n    constructor() {\\n        receiver = msg.sender;\\n    }\\n\\n    function withdrawErc20Token(\\n        address _erc20\\n    ) external nonReentrant returns (uint256) {\\n        require(msg.sender == receiver, \\\"forbidden\\\");\\n        require(_erc20 != address(0), \\\"invalid erc20\\\");\\n        uint256 balance = IERC20(_erc20).balanceOf(address(this));\\n        require(balance != 0, \\\"balance to low\\\");\\n        IERC20(_erc20).transfer(receiver, balance);\\n        emit Withdraw(msg.sender, receiver, _erc20, balance);\\n        return balance;\\n    }\\n\\n    function withdrawNativeToken(uint256 _amount) external nonReentrant {\\n        require(msg.sender == receiver, \\\"forbidden\\\");\\n        require(_amount != 0, \\\"balance to low\\\");\\n        (bool success, ) = receiver.call{value: _amount}(\\\"\\\");\\n        require(success, \\\"failed to withdrawNativeToken\\\");\\n        emit Withdraw(msg.sender, receiver, address(0), _amount);\\n    }\\n}\\n\",\"keccak256\":\"0x74896f703bea9afb3487c742c1566aa62860ea27b3ed15417fa3f0e4281ad10b\",\"license\":\"Apache-2.0\"},\"contracts/MoonbeamReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Create2.sol\\\";\\nimport \\\"./interfaces/IOFTReceiverV2.sol\\\";\\nimport \\\"./interfaces/IOFTV2.sol\\\";\\nimport \\\"./interfaces/ISlpx.sol\\\";\\nimport \\\"./DerivativeContract.sol\\\";\\n\\ncontract MoonbeamReceiver is Ownable, IOFTReceiverV2 {\\n    uint16 public constant destChainId = 217;\\n\\n    address public constant VMANTA = 0xFFfFFfFfdA2a05FB50e7ae99275F4341AEd43379;\\n    address public constant MANTA = 0xfFFffFFf7D3875460d4509eb8d0362c611B4E841;\\n    address public constant slpx = 0xF1d4797E51a4640a76769A50b57abE7479ADd3d8;\\n    address public constant mantaOFT =\\n    0x17313cE6e47D796E61fDeAc34Ab1F58e3e089082;\\n    address public constant vMantaProxyOFT =\\n    0xDeBBb9309d95DaBbFb82411a9C6Daa3909B164A4;\\n    address public mantaPacificSlpx;\\n    uint256 public layerZeroFee;\\n    address public scriptTrigger;\\n    mapping(address => address) public callerToDerivativeAddress;\\n\\n    event SetDerivativeAddress(\\n        address indexed caller,\\n        address indexed derivativeAddress\\n    );\\n    event SetLayerZeroFee(\\n        address indexed scriptTrigger,\\n        uint256 indexed layerZeroFee\\n    );\\n    event SetScriptTrigger(address indexed scriptTrigger);\\n\\n    function setRemoteContract(address _mantaPacificSlpx) public onlyOwner {\\n        require(_mantaPacificSlpx != address(0), \\\"Invalid mantaPacificSlpx\\\");\\n        mantaPacificSlpx = _mantaPacificSlpx;\\n    }\\n\\n    function onOFTReceived(\\n        uint16 srcChainId,\\n        bytes calldata,\\n        uint64,\\n        bytes32 from,\\n        uint amount,\\n        bytes calldata payload\\n    ) external override {\\n        require(\\n            srcChainId == destChainId,\\n            \\\"only receive msg from manta pacific\\\"\\n        );\\n        require(\\n            _msgSender() == mantaOFT || _msgSender() == vMantaProxyOFT,\\n            \\\"only native oft can call\\\"\\n        );\\n        require(\\n            address(uint160(uint(from))) == mantaPacificSlpx,\\n            \\\"only receive msg from mantaPacificSlpx\\\"\\n        );\\n        (address caller, uint32 channel_id) = abi.decode(\\n            payload,\\n            (address, uint32)\\n        );\\n\\n        if (callerToDerivativeAddress[caller] == address(0)) {\\n            setDerivativeAddress(caller);\\n        }\\n\\n        // vManta:\\n        // msg.sender = vMantaProxyOFT, from = mantaPacificSlpx,\\n        // Manta:\\n        // msg.sender = mantaOFT, from = mantaPacificSlpx\\n        address asset_address;\\n        if (_msgSender() == mantaOFT) {\\n            bool success = IERC20(MANTA).transfer(scriptTrigger, layerZeroFee);\\n            require(success, \\\"failed to charge\\\");\\n            asset_address = MANTA;\\n        } else if(_msgSender() == vMantaProxyOFT) {\\n            bool success = IERC20(VMANTA).transfer(scriptTrigger, layerZeroFee);\\n            require(success, \\\"failed to charge\\\");\\n            asset_address = VMANTA;\\n        } else {\\n            revert(\\\"invalid msg.sender\\\");\\n        }\\n\\n        IERC20(asset_address).approve(slpx, amount - layerZeroFee);\\n        ISlpx(slpx).create_order(\\n            asset_address,\\n            uint128(amount - layerZeroFee),\\n            uint64(block.chainid),\\n            abi.encodePacked(callerToDerivativeAddress[caller]),\\n            \\\"MantaPacificV2\\\",\\n            channel_id\\n        );\\n    }\\n\\n    function claimVManta(\\n        address addr,\\n        bytes calldata _adapterParams\\n    ) external payable {\\n        require(_msgSender() == scriptTrigger, \\\"must be scriptTrigger\\\");\\n        address derivativeAddress = callerToDerivativeAddress[addr];\\n        require(derivativeAddress != address(0), \\\"invalid address\\\");\\n        uint256 amount = DerivativeContract(derivativeAddress)\\n            .withdrawErc20Token(VMANTA);\\n        IERC20(VMANTA).approve(vMantaProxyOFT, amount);\\n        ICommonOFT.LzCallParams memory callParams = ICommonOFT.LzCallParams(\\n            payable(_msgSender()),\\n            address(0),\\n            _adapterParams\\n        );\\n        bytes32 toAddress = bytes32(uint256(uint160(addr)));\\n        (uint256 estimateFee, ) = IOFTV2(vMantaProxyOFT).estimateSendFee(\\n            destChainId,\\n            toAddress,\\n            amount,\\n            false,\\n            _adapterParams\\n        );\\n        require(msg.value >= estimateFee, \\\"too small fee\\\");\\n        if (msg.value != estimateFee) {\\n            uint256 refundAmount = msg.value - estimateFee;\\n            (bool success, ) = _msgSender().call{value: refundAmount}(\\\"\\\");\\n            require(success, \\\"failed to refund\\\");\\n        }\\n        IOFTV2(vMantaProxyOFT).sendFrom{value: estimateFee}(\\n            address(this),\\n            destChainId,\\n            toAddress,\\n            amount,\\n            callParams\\n        );\\n    }\\n\\n    function claimManta(\\n        address addr,\\n        bytes calldata _adapterParams\\n    ) external payable {\\n        require(_msgSender() == scriptTrigger, \\\"must be scriptTrigger\\\");\\n        address derivativeAddress = callerToDerivativeAddress[addr];\\n        require(derivativeAddress != address(0), \\\"invalid address\\\");\\n        uint256 amount = DerivativeContract(derivativeAddress)\\n            .withdrawErc20Token(MANTA);\\n        IERC20(MANTA).approve(mantaOFT, amount);\\n        ICommonOFT.LzCallParams memory callParams = ICommonOFT.LzCallParams(\\n            payable(_msgSender()),\\n            address(0),\\n            _adapterParams\\n        );\\n        bytes32 toAddress = bytes32(uint256(uint160(addr)));\\n        (uint256 estimateFee, ) = IOFTV2(mantaOFT).estimateSendFee(\\n            destChainId,\\n            toAddress,\\n            amount,\\n            false,\\n            _adapterParams\\n        );\\n        require(msg.value >= estimateFee, \\\"too small fee\\\");\\n        if (msg.value != estimateFee) {\\n            uint256 refundAmount = msg.value - estimateFee;\\n            (bool success, ) = _msgSender().call{value: refundAmount}(\\\"\\\");\\n            require(success, \\\"failed to refund\\\");\\n        }\\n        IOFTV2(mantaOFT).sendFrom{value: estimateFee}(\\n            address(this),\\n            destChainId,\\n            toAddress,\\n            amount,\\n            callParams\\n        );\\n    }\\n\\n    function setDerivativeAddress(address addr) public {\\n        require(\\n            callerToDerivativeAddress[addr] == address(0),\\n            \\\"already set derivativeAddress\\\"\\n        );\\n        bytes memory bytecode = type(DerivativeContract).creationCode;\\n        bytes32 salt = bytes32(uint256(uint160(addr)));\\n        address derivativeAddress = Create2.deploy(0, salt, bytecode);\\n        callerToDerivativeAddress[addr] = derivativeAddress;\\n        emit SetDerivativeAddress(addr, derivativeAddress);\\n    }\\n\\n    function setLayerZeroFee(uint256 _layerZeroFee) external {\\n        require(_msgSender() == scriptTrigger, \\\"must be scriptTrigger\\\");\\n        layerZeroFee = _layerZeroFee;\\n        emit SetLayerZeroFee(scriptTrigger, _layerZeroFee);\\n    }\\n\\n    function setScriptTrigger(address _scriptTrigger) external onlyOwner {\\n        require(_scriptTrigger != address(0), \\\"invalid address\\\");\\n        scriptTrigger = _scriptTrigger;\\n        emit SetScriptTrigger(_scriptTrigger);\\n    }\\n}\\n\",\"keccak256\":\"0xdd5b00efb2575c1e59fa4b43f89197622ac7bad5d71bf10689dde70942066769\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/ICommonOFT.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Interface of the IOFT core standard\\n */\\ninterface ICommonOFT is IERC165 {\\n    struct LzCallParams {\\n        address payable refundAddress;\\n        address zroPaymentAddress;\\n        bytes adapterParams;\\n    }\\n\\n    /**\\n     * @dev estimate send token `_tokenId` to (`_dstChainId`, `_toAddress`)\\n     * _dstChainId - L0 defined chain id to send tokens too\\n     * _toAddress - dynamic bytes array which contains the address to whom you are sending tokens to on the dstChain\\n     * _amount - amount of the tokens to transfer\\n     * _useZro - indicates to use zro to pay L0 fees\\n     * _adapterParam - flexible bytes array to indicate messaging adapter services in L0\\n     */\\n    function estimateSendFee(\\n        uint16 _dstChainId,\\n        bytes32 _toAddress,\\n        uint _amount,\\n        bool _useZro,\\n        bytes calldata _adapterParams\\n    ) external view returns (uint nativeFee, uint zroFee);\\n\\n    function estimateSendAndCallFee(\\n        uint16 _dstChainId,\\n        bytes32 _toAddress,\\n        uint _amount,\\n        bytes calldata _payload,\\n        uint64 _dstGasForCall,\\n        bool _useZro,\\n        bytes calldata _adapterParams\\n    ) external view returns (uint nativeFee, uint zroFee);\\n\\n    /**\\n     * @dev returns the circulating amount of tokens on current chain\\n     */\\n    function circulatingSupply() external view returns (uint);\\n\\n    /**\\n     * @dev returns the address of the ERC20 token\\n     */\\n    function token() external view returns (address);\\n}\\n\",\"keccak256\":\"0x685586b87541a45bf6b634ef5e356a8968b3c23b33e929dec1807614db26cd6a\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/IOFTReceiverV2.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.10;\\n\\ninterface IOFTReceiverV2 {\\n    /**\\n     * @dev Called by the OFT contract when tokens are received from source chain.\\n     * @param _srcChainId The chain id of the source chain.\\n     * @param _srcAddress The address of the OFT token contract on the source chain.\\n     * @param _nonce The nonce of the transaction on the source chain.\\n     * @param _from The address of the account who calls the sendAndCall() on the source chain.\\n     * @param _amount The amount of tokens to transfer.\\n     * @param _payload Additional data with no specified format.\\n     */\\n    function onOFTReceived(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes32 _from,\\n        uint _amount,\\n        bytes calldata _payload\\n    ) external;\\n}\\n\",\"keccak256\":\"0x79f5295d7c8729de73e196d3ffd5e7f5ad22f4b2cdf9f239419c0eb6fbb4816a\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/IOFTV2.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.10;\\n\\nimport \\\"./ICommonOFT.sol\\\";\\n\\n/**\\n * @dev Interface of the IOFT core standard\\n */\\ninterface IOFTV2 is ICommonOFT {\\n    /**\\n     * @dev send `_amount` amount of token to (`_dstChainId`, `_toAddress`) from `_from`\\n     * `_from` the owner of token\\n     * `_dstChainId` the destination chain identifier\\n     * `_toAddress` can be any size depending on the `dstChainId`.\\n     * `_amount` the quantity of tokens in wei\\n     * `_refundAddress` the address LayerZero refunds if too much message fee is sent\\n     * `_zroPaymentAddress` set to address(0x0) if not paying in ZRO (LayerZero Token)\\n     * `_adapterParams` is a flexible bytes array to indicate messaging adapter services\\n     */\\n    function sendFrom(\\n        address _from,\\n        uint16 _dstChainId,\\n        bytes32 _toAddress,\\n        uint _amount,\\n        LzCallParams calldata _callParams\\n    ) external payable;\\n\\n    function sendAndCall(\\n        address _from,\\n        uint16 _dstChainId,\\n        bytes32 _toAddress,\\n        uint _amount,\\n        bytes calldata _payload,\\n        uint64 _dstGasForCall,\\n        LzCallParams calldata _callParams\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0xd585b8f5c6b3569cd2d5d5d04345f17e9bf0d3f4ea4d0831cb4da6129629a555\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/ISlpx.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.10;\\n\\ninterface ISlpx {\\n    event Mint(\\n        address minter,\\n        address assetAddress,\\n        uint256 amount,\\n        address receiver,\\n        bytes callcode,\\n        string remark\\n    );\\n    event Redeem(\\n        address redeemer,\\n        address assetAddress,\\n        uint256 amount,\\n        address receiver,\\n        bytes callcode\\n    );\\n    event CreateOrder(\\n        address assetAddress,\\n        uint128 amount,\\n        uint64 dest_chain_id,\\n        bytes receiver,\\n        string remark,\\n        uint32 channel_id\\n    );\\n\\n    /// Minted vNative assets such as vASTR, vGLMR, vMOVR\\n    function mintVNativeAsset(\\n        address receiver,\\n        string memory remark\\n    ) external payable;\\n\\n    /// Minted vAssets\\n    function mintVAsset(\\n        address assetAddress,\\n        uint256 amount,\\n        address receiver,\\n        string memory remark\\n    ) external;\\n\\n    /// Minted vNative assets such as vASTR, vGLMR, vMOVR\\n    function mintVNativeAssetWithChannelId(\\n        address receiver,\\n        string memory remark,\\n        uint32 channel_id\\n    ) external payable;\\n\\n    /// Minted vAssets\\n    function mintVAssetWithChannelId(\\n        address assetAddress,\\n        uint256 amount,\\n        address receiver,\\n        string memory remark,\\n        uint32 channel_id\\n    ) external;\\n\\n    /// Redeem assets\\n    function redeemAsset(\\n        address vAssetAddress,\\n        uint256 amount,\\n        address receiver\\n    ) external;\\n\\n    /**\\n    * @dev Create order to mint vAsset or redeem vAsset on bifrost chain\\n    * @param assetAddress The address of the asset to mint or redeem\\n    * @param amount The amount of the asset to mint or redeem\\n    * @param dest_chain_id When order is executed on Bifrost, Asset/vAsset will be transferred to this chain\\n    * @param receiver The receiver address on the destination chain, 20 bytes for EVM, 32 bytes for Substrate\\n    * @param remark The remark of the order, less than 32 bytes. For example, \\\"OmniLS\\\"\\n    * @param channel_id The channel id of the order, you can set it. Bifrost chain will use it to share reward.\\n    **/\\n    function create_order(\\n        address assetAddress,\\n        uint128 amount,\\n        uint64 dest_chain_id,\\n        bytes memory receiver,\\n        string memory remark,\\n        uint32 channel_id\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x19a5bd92a0cefeee0fbe3b02e6704baa927081cffd3f656215d7076a75f905d7\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611fb88061007e6000396000f3fe60806040526004361061011f5760003560e01c8063a7fd9c6b116100a0578063c241339711610064578063c24133971461032e578063c4af1c0b1461034e578063f012945314610376578063f17e1d3d1461039e578063f2fde38b146103c657600080fd5b8063a7fd9c6b14610281578063a97d9f44146102b7578063ae83f844146102db578063afd6aab7146102fb578063c0afb3f41461030e57600080fd5b80635d76da01116100e75780635d76da01146101de578063715018a6146102065780637fcf35da1461021b5780638da5cb5b1461023b578063a6a6e9261461025957600080fd5b80630d1bf91f1461012457806325a2236714610169578063357ba05f1461017e578063525560ed1461019e5780635d741b09146101be575b600080fd5b34801561013057600080fd5b5061014c73debbb9309d95dabbfb82411a9c6daa3909b164a481565b6040516001600160a01b0390911681526020015b60405180910390f35b61017c6101773660046115ea565b6103e6565b005b34801561018a57600080fd5b5061017c61019936600461163f565b6107d1565b3480156101aa57600080fd5b5060015461014c906001600160a01b031681565b3480156101ca57600080fd5b5060035461014c906001600160a01b031681565b3480156101ea57600080fd5b5061014c73f1d4797e51a4640a76769a50b57abe7479add3d881565b34801561021257600080fd5b5061017c610849565b34801561022757600080fd5b5061017c61023636600461165c565b61085d565b34801561024757600080fd5b506000546001600160a01b031661014c565b34801561026557600080fd5b5061014c73ffffffffda2a05fb50e7ae99275f4341aed4337981565b34801561028d57600080fd5b5061014c61029c36600461163f565b6004602052600090815260409020546001600160a01b031681565b3480156102c357600080fd5b506102cd60025481565b604051908152602001610160565b3480156102e757600080fd5b5061017c6102f6366004611712565b610db6565b61017c6103093660046115ea565b610e29565b34801561031a57600080fd5b5061017c61032936600461163f565b6111cf565b34801561033a57600080fd5b5061017c61034936600461163f565b61124f565b34801561035a57600080fd5b5061036360d981565b60405161ffff9091168152602001610160565b34801561038257600080fd5b5061014c7317313ce6e47d796e61fdeac34ab1f58e3e08908281565b3480156103aa57600080fd5b5061014c73ffffffff7d3875460d4509eb8d0362c611b4e84181565b3480156103d257600080fd5b5061017c6103e136600461163f565b611354565b6003546001600160a01b0316336001600160a01b0316146104225760405162461bcd60e51b81526004016104199061172b565b60405180910390fd5b6001600160a01b03808416600090815260046020526040902054168061045a5760405162461bcd60e51b81526004016104199061175a565b6040516308aea7fd60e41b815273ffffffffda2a05fb50e7ae99275f4341aed4337960048201526000906001600160a01b03831690638aea7fd0906024016020604051808303816000875af11580156104b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104db9190611783565b60405163095ea7b360e01b815273debbb9309d95dabbfb82411a9c6daa3909b164a460048201526024810182905290915073ffffffffda2a05fb50e7ae99275f4341aed433799063095ea7b3906044016020604051808303816000875af115801561054a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056e919061179c565b50600060405180606001604052806105833390565b6001600160a01b0316815260200160006001600160a01b0316815260200186868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250939094525050604051630d94982d60e21b81529293506001600160a01b0389169290915073debbb9309d95dabbfb82411a9c6daa3909b164a49063365260b49061062c9060d9908690899087908e908e906004016117be565b6040805180830381865afa158015610648573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066c919061180f565b509050803410156106af5760405162461bcd60e51b815260206004820152600d60248201526c746f6f20736d616c6c2066656560981b6044820152606401610419565b8034146107535760006106c28234611833565b604051909150600090339083908381818185875af1925050503d8060008114610707576040519150601f19603f3d011682016040523d82523d6000602084013e61070c565b606091505b50509050806107505760405162461bcd60e51b815260206004820152601060248201526f19985a5b1959081d1bc81c99599d5b9960821b6044820152606401610419565b50505b60405163695ef6bf60e01b815273debbb9309d95dabbfb82411a9c6daa3909b164a49063695ef6bf90839061079590309060d99088908b908b906004016118a5565b6000604051808303818588803b1580156107ae57600080fd5b505af11580156107c2573d6000803e3d6000fd5b50505050505050505050505050565b6107d96113cd565b6001600160a01b0381166107ff5760405162461bcd60e51b81526004016104199061175a565b600380546001600160a01b0319166001600160a01b0383169081179091556040517fda100d63215e418eb5fdfcdb0b592f13bc6aea387392797c16c70caf4ea8772190600090a250565b6108516113cd565b61085b6000611427565b565b61ffff881660d9146108bd5760405162461bcd60e51b815260206004820152602360248201527f6f6e6c792072656365697665206d73672066726f6d206d616e7461207061636960448201526266696360e81b6064820152608401610419565b337317313ce6e47d796e61fdeac34ab1f58e3e08908214806108f257503373debbb9309d95dabbfb82411a9c6daa3909b164a4145b61093e5760405162461bcd60e51b815260206004820152601860248201527f6f6e6c79206e6174697665206f66742063616e2063616c6c00000000000000006044820152606401610419565b6001546001600160a01b038581169116146109aa5760405162461bcd60e51b815260206004820152602660248201527f6f6e6c792072656365697665206d73672066726f6d206d616e746150616369666044820152650d2c6a6d8e0f60d31b6064820152608401610419565b6000806109b98385018561190c565b6001600160a01b03808316600090815260046020526040902054929450909250166109e7576109e78261124f565b6000337317313ce6e47d796e61fdeac34ab1f58e3e0890821415610af15760035460025460405163a9059cbb60e01b81526001600160a01b039092166004830152602482015260009073ffffffff7d3875460d4509eb8d0362c611b4e8419063a9059cbb906044016020604051808303816000875af1158015610a6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a92919061179c565b905080610ad45760405162461bcd60e51b815260206004820152601060248201526f6661696c656420746f2063686172676560801b6044820152606401610419565b73ffffffff7d3875460d4509eb8d0362c611b4e841915050610c36565b3373debbb9309d95dabbfb82411a9c6daa3909b164a41415610bf95760035460025460405163a9059cbb60e01b81526001600160a01b039092166004830152602482015260009073ffffffffda2a05fb50e7ae99275f4341aed433799063a9059cbb906044016020604051808303816000875af1158015610b76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9a919061179c565b905080610bdc5760405162461bcd60e51b815260206004820152601060248201526f6661696c656420746f2063686172676560801b6044820152606401610419565b73ffffffffda2a05fb50e7ae99275f4341aed43379915050610c36565b60405162461bcd60e51b815260206004820152601260248201527134b73b30b634b21036b9b39739b2b73232b960711b6044820152606401610419565b806001600160a01b031663095ea7b373f1d4797e51a4640a76769a50b57abe7479add3d860025489610c689190611833565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610cb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd7919061179c565b5073f1d4797e51a4640a76769a50b57abe7479add3d86001600160a01b03166362aba6eb8260025489610d0a9190611833565b6001600160a01b03871660009081526004602090815260409182902054915160609290921b6bffffffffffffffffffffffff1916908201524690603401604051602081830303815290604052876040518663ffffffff1660e01b8152600401610d7795949392919061194e565b600060405180830381600087803b158015610d9157600080fd5b505af1158015610da5573d6000803e3d6000fd5b505050505050505050505050505050565b6003546001600160a01b0316336001600160a01b031614610de95760405162461bcd60e51b81526004016104199061172b565b600281905560035460405182916001600160a01b0316907f405485c96e1fef0d0e7aa1b6bc6f839d6e825f49f9e5607dc07fcd69e098970690600090a350565b6003546001600160a01b0316336001600160a01b031614610e5c5760405162461bcd60e51b81526004016104199061172b565b6001600160a01b038084166000908152600460205260409020541680610e945760405162461bcd60e51b81526004016104199061175a565b6040516308aea7fd60e41b815273ffffffff7d3875460d4509eb8d0362c611b4e84160048201526000906001600160a01b03831690638aea7fd0906024016020604051808303816000875af1158015610ef1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f159190611783565b60405163095ea7b360e01b81527317313ce6e47d796e61fdeac34ab1f58e3e08908260048201526024810182905290915073ffffffff7d3875460d4509eb8d0362c611b4e8419063095ea7b3906044016020604051808303816000875af1158015610f84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa8919061179c565b5060006040518060600160405280610fbd3390565b6001600160a01b0316815260200160006001600160a01b0316815260200186868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250939094525050604051630d94982d60e21b81529293506001600160a01b038916929091507317313ce6e47d796e61fdeac34ab1f58e3e0890829063365260b4906110669060d9908690899087908e908e906004016117be565b6040805180830381865afa158015611082573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a6919061180f565b509050803410156110e95760405162461bcd60e51b815260206004820152600d60248201526c746f6f20736d616c6c2066656560981b6044820152606401610419565b80341461118d5760006110fc8234611833565b604051909150600090339083908381818185875af1925050503d8060008114611141576040519150601f19603f3d011682016040523d82523d6000602084013e611146565b606091505b505090508061118a5760405162461bcd60e51b815260206004820152601060248201526f19985a5b1959081d1bc81c99599d5b9960821b6044820152606401610419565b50505b60405163695ef6bf60e01b81527317313ce6e47d796e61fdeac34ab1f58e3e0890829063695ef6bf90839061079590309060d99088908b908b906004016118a5565b6111d76113cd565b6001600160a01b03811661122d5760405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206d616e746150616369666963536c707800000000000000006044820152606401610419565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381811660009081526004602052604090205416156112b75760405162461bcd60e51b815260206004820152601d60248201527f616c7265616479207365742064657269766174697665416464726573730000006044820152606401610419565b6000604051806020016112c99061157f565b601f1982820381018352601f9091011660405290506001600160a01b03821660006112f5818385611477565b6001600160a01b0385811660008181526004602052604080822080546001600160a01b031916948616948517905551939450919290917f57b0e11e6397ba91fdcf1893a12f81fa7f83af6687a4c7c51bb7ec5cc87b700991a350505050565b61135c6113cd565b6001600160a01b0381166113c15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610419565b6113ca81611427565b50565b6000546001600160a01b0316331461085b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610419565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000834710156114c95760405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e63650000006044820152606401610419565b81516115175760405162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152606401610419565b8282516020840186f590506001600160a01b0381166115785760405162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152606401610419565b9392505050565b6105a8806119db83390190565b6001600160a01b03811681146113ca57600080fd5b60008083601f8401126115b357600080fd5b50813567ffffffffffffffff8111156115cb57600080fd5b6020830191508360208285010111156115e357600080fd5b9250929050565b6000806000604084860312156115ff57600080fd5b833561160a8161158c565b9250602084013567ffffffffffffffff81111561162657600080fd5b611632868287016115a1565b9497909650939450505050565b60006020828403121561165157600080fd5b81356115788161158c565b60008060008060008060008060c0898b03121561167857600080fd5b883561ffff8116811461168a57600080fd5b9750602089013567ffffffffffffffff808211156116a757600080fd5b6116b38c838d016115a1565b909950975060408b0135915080821682146116cd57600080fd5b90955060608a0135945060808a0135935060a08a013590808211156116f157600080fd5b506116fe8b828c016115a1565b999c989b5096995094979396929594505050565b60006020828403121561172457600080fd5b5035919050565b60208082526015908201527436bab9ba1031329039b1b934b83a2a3934b3b3b2b960591b604082015260600190565b6020808252600f908201526e696e76616c6964206164647265737360881b604082015260600190565b60006020828403121561179557600080fd5b5051919050565b6000602082840312156117ae57600080fd5b8151801515811461157857600080fd5b61ffff87168152856020820152846040820152831515606082015260a060808201528160a0820152818360c0830137600081830160c090810191909152601f909201601f1916010195945050505050565b6000806040838503121561182257600080fd5b505080516020909101519092909150565b60008282101561185357634e487b7160e01b600052601160045260246000fd5b500390565b6000815180845260005b8181101561187e57602081850181015186830182015201611862565b81811115611890576000602083870101525b50601f01601f19169290920160200192915050565b600060018060a01b03808816835261ffff8716602084015285604084015284606084015260a060808401528084511660a08401528060208501511660c0840152506040830151606060e0840152611900610100840182611858565b98975050505050505050565b6000806040838503121561191f57600080fd5b823561192a8161158c565b9150602083013563ffffffff8116811461194357600080fd5b809150509250929050565b6001600160a01b03861681526fffffffffffffffffffffffffffffffff8516602082015267ffffffffffffffff8416604082015260c06060820181905260009061199a90830185611858565b8281036080840152600e81526d26b0b73a30a830b1b4b334b1ab1960911b60208201526040810191505063ffffffff831660a0830152969550505050505056fe608060405234801561001057600080fd5b506001600081905580546001600160a01b03191633179055610571806100376000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806317e0f252146100465780638aea7fd01461005b578063f7260d3e14610081575b600080fd5b6100596100543660046104b7565b6100ac565b005b61006e6100693660046104d0565b610240565b6040519081526020015b60405180910390f35b600154610094906001600160a01b031681565b6040516001600160a01b039091168152602001610078565b6100b461045d565b6001546001600160a01b031633146100ff5760405162461bcd60e51b81526020600482015260096024820152683337b93134b23232b760b91b60448201526064015b60405180910390fd5b8061013d5760405162461bcd60e51b815260206004820152600e60248201526d62616c616e636520746f206c6f7760901b60448201526064016100f6565b6001546040516000916001600160a01b03169083908381818185875af1925050503d806000811461018a576040519150601f19603f3d011682016040523d82523d6000602084013e61018f565b606091505b50509050806101e05760405162461bcd60e51b815260206004820152601d60248201527f6661696c656420746f2077697468647261774e6174697665546f6b656e00000060448201526064016100f6565b600154604080513381526001600160a01b03909216602083015260008282015260608201849052517f3115d1449a7b732c986cba18244e897a450f61e1bb8d589cd2e69e6c8924f9f79181900360800190a15061023d6001600055565b50565b600061024a61045d565b6001546001600160a01b031633146102905760405162461bcd60e51b81526020600482015260096024820152683337b93134b23232b760b91b60448201526064016100f6565b6001600160a01b0382166102d65760405162461bcd60e51b815260206004820152600d60248201526c0696e76616c696420657263323609c1b60448201526064016100f6565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa15801561031d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103419190610500565b9050806103815760405162461bcd60e51b815260206004820152600e60248201526d62616c616e636520746f206c6f7760901b60448201526064016100f6565b60015460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390529084169063a9059cbb906044016020604051808303816000875af11580156103d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f89190610519565b50600154604080513381526001600160a01b0392831660208201529185168282015260608201839052517f3115d1449a7b732c986cba18244e897a450f61e1bb8d589cd2e69e6c8924f9f79181900360800190a190506104586001600055565b919050565b600260005414156104b05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016100f6565b6002600055565b6000602082840312156104c957600080fd5b5035919050565b6000602082840312156104e257600080fd5b81356001600160a01b03811681146104f957600080fd5b9392505050565b60006020828403121561051257600080fd5b5051919050565b60006020828403121561052b57600080fd5b815180151581146104f957600080fdfea26469706673582212208cdaeacfdd5c4018a525a04627735e0394975d213762f15d3134e53ec33ca9a164736f6c634300080a0033a26469706673582212209c6e48a3c3e7ebf32225095d8636dbc12515dee4796c5405bc84506c101fb88064736f6c634300080a0033",
  "deployedBytecode": "0x60806040526004361061011f5760003560e01c8063a7fd9c6b116100a0578063c241339711610064578063c24133971461032e578063c4af1c0b1461034e578063f012945314610376578063f17e1d3d1461039e578063f2fde38b146103c657600080fd5b8063a7fd9c6b14610281578063a97d9f44146102b7578063ae83f844146102db578063afd6aab7146102fb578063c0afb3f41461030e57600080fd5b80635d76da01116100e75780635d76da01146101de578063715018a6146102065780637fcf35da1461021b5780638da5cb5b1461023b578063a6a6e9261461025957600080fd5b80630d1bf91f1461012457806325a2236714610169578063357ba05f1461017e578063525560ed1461019e5780635d741b09146101be575b600080fd5b34801561013057600080fd5b5061014c73debbb9309d95dabbfb82411a9c6daa3909b164a481565b6040516001600160a01b0390911681526020015b60405180910390f35b61017c6101773660046115ea565b6103e6565b005b34801561018a57600080fd5b5061017c61019936600461163f565b6107d1565b3480156101aa57600080fd5b5060015461014c906001600160a01b031681565b3480156101ca57600080fd5b5060035461014c906001600160a01b031681565b3480156101ea57600080fd5b5061014c73f1d4797e51a4640a76769a50b57abe7479add3d881565b34801561021257600080fd5b5061017c610849565b34801561022757600080fd5b5061017c61023636600461165c565b61085d565b34801561024757600080fd5b506000546001600160a01b031661014c565b34801561026557600080fd5b5061014c73ffffffffda2a05fb50e7ae99275f4341aed4337981565b34801561028d57600080fd5b5061014c61029c36600461163f565b6004602052600090815260409020546001600160a01b031681565b3480156102c357600080fd5b506102cd60025481565b604051908152602001610160565b3480156102e757600080fd5b5061017c6102f6366004611712565b610db6565b61017c6103093660046115ea565b610e29565b34801561031a57600080fd5b5061017c61032936600461163f565b6111cf565b34801561033a57600080fd5b5061017c61034936600461163f565b61124f565b34801561035a57600080fd5b5061036360d981565b60405161ffff9091168152602001610160565b34801561038257600080fd5b5061014c7317313ce6e47d796e61fdeac34ab1f58e3e08908281565b3480156103aa57600080fd5b5061014c73ffffffff7d3875460d4509eb8d0362c611b4e84181565b3480156103d257600080fd5b5061017c6103e136600461163f565b611354565b6003546001600160a01b0316336001600160a01b0316146104225760405162461bcd60e51b81526004016104199061172b565b60405180910390fd5b6001600160a01b03808416600090815260046020526040902054168061045a5760405162461bcd60e51b81526004016104199061175a565b6040516308aea7fd60e41b815273ffffffffda2a05fb50e7ae99275f4341aed4337960048201526000906001600160a01b03831690638aea7fd0906024016020604051808303816000875af11580156104b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104db9190611783565b60405163095ea7b360e01b815273debbb9309d95dabbfb82411a9c6daa3909b164a460048201526024810182905290915073ffffffffda2a05fb50e7ae99275f4341aed433799063095ea7b3906044016020604051808303816000875af115801561054a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056e919061179c565b50600060405180606001604052806105833390565b6001600160a01b0316815260200160006001600160a01b0316815260200186868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250939094525050604051630d94982d60e21b81529293506001600160a01b0389169290915073debbb9309d95dabbfb82411a9c6daa3909b164a49063365260b49061062c9060d9908690899087908e908e906004016117be565b6040805180830381865afa158015610648573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066c919061180f565b509050803410156106af5760405162461bcd60e51b815260206004820152600d60248201526c746f6f20736d616c6c2066656560981b6044820152606401610419565b8034146107535760006106c28234611833565b604051909150600090339083908381818185875af1925050503d8060008114610707576040519150601f19603f3d011682016040523d82523d6000602084013e61070c565b606091505b50509050806107505760405162461bcd60e51b815260206004820152601060248201526f19985a5b1959081d1bc81c99599d5b9960821b6044820152606401610419565b50505b60405163695ef6bf60e01b815273debbb9309d95dabbfb82411a9c6daa3909b164a49063695ef6bf90839061079590309060d99088908b908b906004016118a5565b6000604051808303818588803b1580156107ae57600080fd5b505af11580156107c2573d6000803e3d6000fd5b50505050505050505050505050565b6107d96113cd565b6001600160a01b0381166107ff5760405162461bcd60e51b81526004016104199061175a565b600380546001600160a01b0319166001600160a01b0383169081179091556040517fda100d63215e418eb5fdfcdb0b592f13bc6aea387392797c16c70caf4ea8772190600090a250565b6108516113cd565b61085b6000611427565b565b61ffff881660d9146108bd5760405162461bcd60e51b815260206004820152602360248201527f6f6e6c792072656365697665206d73672066726f6d206d616e7461207061636960448201526266696360e81b6064820152608401610419565b337317313ce6e47d796e61fdeac34ab1f58e3e08908214806108f257503373debbb9309d95dabbfb82411a9c6daa3909b164a4145b61093e5760405162461bcd60e51b815260206004820152601860248201527f6f6e6c79206e6174697665206f66742063616e2063616c6c00000000000000006044820152606401610419565b6001546001600160a01b038581169116146109aa5760405162461bcd60e51b815260206004820152602660248201527f6f6e6c792072656365697665206d73672066726f6d206d616e746150616369666044820152650d2c6a6d8e0f60d31b6064820152608401610419565b6000806109b98385018561190c565b6001600160a01b03808316600090815260046020526040902054929450909250166109e7576109e78261124f565b6000337317313ce6e47d796e61fdeac34ab1f58e3e0890821415610af15760035460025460405163a9059cbb60e01b81526001600160a01b039092166004830152602482015260009073ffffffff7d3875460d4509eb8d0362c611b4e8419063a9059cbb906044016020604051808303816000875af1158015610a6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a92919061179c565b905080610ad45760405162461bcd60e51b815260206004820152601060248201526f6661696c656420746f2063686172676560801b6044820152606401610419565b73ffffffff7d3875460d4509eb8d0362c611b4e841915050610c36565b3373debbb9309d95dabbfb82411a9c6daa3909b164a41415610bf95760035460025460405163a9059cbb60e01b81526001600160a01b039092166004830152602482015260009073ffffffffda2a05fb50e7ae99275f4341aed433799063a9059cbb906044016020604051808303816000875af1158015610b76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9a919061179c565b905080610bdc5760405162461bcd60e51b815260206004820152601060248201526f6661696c656420746f2063686172676560801b6044820152606401610419565b73ffffffffda2a05fb50e7ae99275f4341aed43379915050610c36565b60405162461bcd60e51b815260206004820152601260248201527134b73b30b634b21036b9b39739b2b73232b960711b6044820152606401610419565b806001600160a01b031663095ea7b373f1d4797e51a4640a76769a50b57abe7479add3d860025489610c689190611833565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610cb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd7919061179c565b5073f1d4797e51a4640a76769a50b57abe7479add3d86001600160a01b03166362aba6eb8260025489610d0a9190611833565b6001600160a01b03871660009081526004602090815260409182902054915160609290921b6bffffffffffffffffffffffff1916908201524690603401604051602081830303815290604052876040518663ffffffff1660e01b8152600401610d7795949392919061194e565b600060405180830381600087803b158015610d9157600080fd5b505af1158015610da5573d6000803e3d6000fd5b505050505050505050505050505050565b6003546001600160a01b0316336001600160a01b031614610de95760405162461bcd60e51b81526004016104199061172b565b600281905560035460405182916001600160a01b0316907f405485c96e1fef0d0e7aa1b6bc6f839d6e825f49f9e5607dc07fcd69e098970690600090a350565b6003546001600160a01b0316336001600160a01b031614610e5c5760405162461bcd60e51b81526004016104199061172b565b6001600160a01b038084166000908152600460205260409020541680610e945760405162461bcd60e51b81526004016104199061175a565b6040516308aea7fd60e41b815273ffffffff7d3875460d4509eb8d0362c611b4e84160048201526000906001600160a01b03831690638aea7fd0906024016020604051808303816000875af1158015610ef1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f159190611783565b60405163095ea7b360e01b81527317313ce6e47d796e61fdeac34ab1f58e3e08908260048201526024810182905290915073ffffffff7d3875460d4509eb8d0362c611b4e8419063095ea7b3906044016020604051808303816000875af1158015610f84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa8919061179c565b5060006040518060600160405280610fbd3390565b6001600160a01b0316815260200160006001600160a01b0316815260200186868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250939094525050604051630d94982d60e21b81529293506001600160a01b038916929091507317313ce6e47d796e61fdeac34ab1f58e3e0890829063365260b4906110669060d9908690899087908e908e906004016117be565b6040805180830381865afa158015611082573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a6919061180f565b509050803410156110e95760405162461bcd60e51b815260206004820152600d60248201526c746f6f20736d616c6c2066656560981b6044820152606401610419565b80341461118d5760006110fc8234611833565b604051909150600090339083908381818185875af1925050503d8060008114611141576040519150601f19603f3d011682016040523d82523d6000602084013e611146565b606091505b505090508061118a5760405162461bcd60e51b815260206004820152601060248201526f19985a5b1959081d1bc81c99599d5b9960821b6044820152606401610419565b50505b60405163695ef6bf60e01b81527317313ce6e47d796e61fdeac34ab1f58e3e0890829063695ef6bf90839061079590309060d99088908b908b906004016118a5565b6111d76113cd565b6001600160a01b03811661122d5760405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206d616e746150616369666963536c707800000000000000006044820152606401610419565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381811660009081526004602052604090205416156112b75760405162461bcd60e51b815260206004820152601d60248201527f616c7265616479207365742064657269766174697665416464726573730000006044820152606401610419565b6000604051806020016112c99061157f565b601f1982820381018352601f9091011660405290506001600160a01b03821660006112f5818385611477565b6001600160a01b0385811660008181526004602052604080822080546001600160a01b031916948616948517905551939450919290917f57b0e11e6397ba91fdcf1893a12f81fa7f83af6687a4c7c51bb7ec5cc87b700991a350505050565b61135c6113cd565b6001600160a01b0381166113c15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610419565b6113ca81611427565b50565b6000546001600160a01b0316331461085b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610419565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000834710156114c95760405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e63650000006044820152606401610419565b81516115175760405162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152606401610419565b8282516020840186f590506001600160a01b0381166115785760405162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152606401610419565b9392505050565b6105a8806119db83390190565b6001600160a01b03811681146113ca57600080fd5b60008083601f8401126115b357600080fd5b50813567ffffffffffffffff8111156115cb57600080fd5b6020830191508360208285010111156115e357600080fd5b9250929050565b6000806000604084860312156115ff57600080fd5b833561160a8161158c565b9250602084013567ffffffffffffffff81111561162657600080fd5b611632868287016115a1565b9497909650939450505050565b60006020828403121561165157600080fd5b81356115788161158c565b60008060008060008060008060c0898b03121561167857600080fd5b883561ffff8116811461168a57600080fd5b9750602089013567ffffffffffffffff808211156116a757600080fd5b6116b38c838d016115a1565b909950975060408b0135915080821682146116cd57600080fd5b90955060608a0135945060808a0135935060a08a013590808211156116f157600080fd5b506116fe8b828c016115a1565b999c989b5096995094979396929594505050565b60006020828403121561172457600080fd5b5035919050565b60208082526015908201527436bab9ba1031329039b1b934b83a2a3934b3b3b2b960591b604082015260600190565b6020808252600f908201526e696e76616c6964206164647265737360881b604082015260600190565b60006020828403121561179557600080fd5b5051919050565b6000602082840312156117ae57600080fd5b8151801515811461157857600080fd5b61ffff87168152856020820152846040820152831515606082015260a060808201528160a0820152818360c0830137600081830160c090810191909152601f909201601f1916010195945050505050565b6000806040838503121561182257600080fd5b505080516020909101519092909150565b60008282101561185357634e487b7160e01b600052601160045260246000fd5b500390565b6000815180845260005b8181101561187e57602081850181015186830182015201611862565b81811115611890576000602083870101525b50601f01601f19169290920160200192915050565b600060018060a01b03808816835261ffff8716602084015285604084015284606084015260a060808401528084511660a08401528060208501511660c0840152506040830151606060e0840152611900610100840182611858565b98975050505050505050565b6000806040838503121561191f57600080fd5b823561192a8161158c565b9150602083013563ffffffff8116811461194357600080fd5b809150509250929050565b6001600160a01b03861681526fffffffffffffffffffffffffffffffff8516602082015267ffffffffffffffff8416604082015260c06060820181905260009061199a90830185611858565b8281036080840152600e81526d26b0b73a30a830b1b4b334b1ab1960911b60208201526040810191505063ffffffff831660a0830152969550505050505056fe608060405234801561001057600080fd5b506001600081905580546001600160a01b03191633179055610571806100376000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806317e0f252146100465780638aea7fd01461005b578063f7260d3e14610081575b600080fd5b6100596100543660046104b7565b6100ac565b005b61006e6100693660046104d0565b610240565b6040519081526020015b60405180910390f35b600154610094906001600160a01b031681565b6040516001600160a01b039091168152602001610078565b6100b461045d565b6001546001600160a01b031633146100ff5760405162461bcd60e51b81526020600482015260096024820152683337b93134b23232b760b91b60448201526064015b60405180910390fd5b8061013d5760405162461bcd60e51b815260206004820152600e60248201526d62616c616e636520746f206c6f7760901b60448201526064016100f6565b6001546040516000916001600160a01b03169083908381818185875af1925050503d806000811461018a576040519150601f19603f3d011682016040523d82523d6000602084013e61018f565b606091505b50509050806101e05760405162461bcd60e51b815260206004820152601d60248201527f6661696c656420746f2077697468647261774e6174697665546f6b656e00000060448201526064016100f6565b600154604080513381526001600160a01b03909216602083015260008282015260608201849052517f3115d1449a7b732c986cba18244e897a450f61e1bb8d589cd2e69e6c8924f9f79181900360800190a15061023d6001600055565b50565b600061024a61045d565b6001546001600160a01b031633146102905760405162461bcd60e51b81526020600482015260096024820152683337b93134b23232b760b91b60448201526064016100f6565b6001600160a01b0382166102d65760405162461bcd60e51b815260206004820152600d60248201526c0696e76616c696420657263323609c1b60448201526064016100f6565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa15801561031d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103419190610500565b9050806103815760405162461bcd60e51b815260206004820152600e60248201526d62616c616e636520746f206c6f7760901b60448201526064016100f6565b60015460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390529084169063a9059cbb906044016020604051808303816000875af11580156103d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f89190610519565b50600154604080513381526001600160a01b0392831660208201529185168282015260608201839052517f3115d1449a7b732c986cba18244e897a450f61e1bb8d589cd2e69e6c8924f9f79181900360800190a190506104586001600055565b919050565b600260005414156104b05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016100f6565b6002600055565b6000602082840312156104c957600080fd5b5035919050565b6000602082840312156104e257600080fd5b81356001600160a01b03811681146104f957600080fd5b9392505050565b60006020828403121561051257600080fd5b5051919050565b60006020828403121561052b57600080fd5b815180151581146104f957600080fdfea26469706673582212208cdaeacfdd5c4018a525a04627735e0394975d213762f15d3134e53ec33ca9a164736f6c634300080a0033a26469706673582212209c6e48a3c3e7ebf32225095d8636dbc12515dee4796c5405bc84506c101fb88064736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/MoonbeamReceiver.sol:MoonbeamReceiver",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 934,
        "contract": "contracts/MoonbeamReceiver.sol:MoonbeamReceiver",
        "label": "mantaPacificSlpx",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 936,
        "contract": "contracts/MoonbeamReceiver.sol:MoonbeamReceiver",
        "label": "layerZeroFee",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 938,
        "contract": "contracts/MoonbeamReceiver.sol:MoonbeamReceiver",
        "label": "scriptTrigger",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 942,
        "contract": "contracts/MoonbeamReceiver.sol:MoonbeamReceiver",
        "label": "callerToDerivativeAddress",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
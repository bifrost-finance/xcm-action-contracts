{
  "address": "0x95A4D4b345c551A9182289F9dD7A018b7Fd0f940",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Redeem",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "assetAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "channel_id",
          "type": "uint32"
        },
        {
          "internalType": "uint64",
          "name": "dstGasForCall",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "adapterParams",
          "type": "bytes"
        }
      ],
      "name": "create_order",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "destChainId",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "assetAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "channel_id",
          "type": "uint32"
        },
        {
          "internalType": "uint64",
          "name": "dstGasForCall",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "adapterParams",
          "type": "bytes"
        }
      ],
      "name": "estimateSendAndCallFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "manta",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mantaOFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "remoteContract",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minAmount",
          "type": "uint256"
        }
      ],
      "name": "setMinAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_remoteContract",
          "type": "address"
        }
      ],
      "name": "setRemoteContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vMantaOFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x2e9bd2aeddaee20c400249fe5d89712ca33fbbf258309d4f9699d363e2628f51",
  "receipt": {
    "to": null,
    "from": "0x4597C97a43dFBb4a398E2b16AA9cE61f90d801DD",
    "contractAddress": "0x95A4D4b345c551A9182289F9dD7A018b7Fd0f940",
    "transactionIndex": 37,
    "gasUsed": "842940",
    "logsBloom": "0x
    "blockHash": "0x4c8ca9439301545be6839a1affc653240c621bf637dd95998a0d305b686a6c03",
    "transactionHash": "0x2e9bd2aeddaee20c400249fe5d89712ca33fbbf258309d4f9699d363e2628f51",
    "logs": [
      {
        "transactionIndex": 37,
        "blockNumber": 3648536,
        "transactionHash": "0x2e9bd2aeddaee20c400249fe5d89712ca33fbbf258309d4f9699d363e2628f51",
        "address": "0x95A4D4b345c551A9182289F9dD7A018b7Fd0f940",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000004597c97a43dfbb4a398e2b16aa9ce61f90d801dd"
        ],
        "data": "0x",
        "logIndex": 26,
        "blockHash": "0x4c8ca9439301545be6839a1affc653240c621bf637dd95998a0d305b686a6c03"
      }
    ],
    "blockNumber": 3648536,
    "cumulativeGasUsed": "3293191",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 4,
  "solcInputHash": "40f77825c628b7fd556304a6e27c210f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"channel_id\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"dstGasForCall\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"adapterParams\",\"type\":\"bytes\"}],\"name\":\"create_order\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"channel_id\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"dstGasForCall\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"adapterParams\",\"type\":\"bytes\"}],\"name\":\"estimateSendAndCallFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manta\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mantaOFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remoteContract\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minAmount\",\"type\":\"uint256\"}],\"name\":\"setMinAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_remoteContract\",\"type\":\"address\"}],\"name\":\"setRemoteContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vMantaOFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MantaPacificSlpx.sol\":\"MantaPacificSlpx\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/MantaPacificSlpx.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./interfaces/IOFTV2.sol\\\";\\nimport \\\"./interfaces/Types.sol\\\";\\n\\ncontract MantaPacificSlpx is Ownable {\\n    address public constant mantaOFT =\\n        0x17313cE6e47D796E61fDeAc34Ab1F58e3e089082;\\n    address public constant vMantaOFT =\\n        0x7746ef546d562b443AE4B4145541a3b1a3D75717;\\n    address public constant manta = 0x95CeF13441Be50d20cA4558CC0a27B601aC544E5;\\n    uint16 public constant destChainId = 126;\\n    bytes32 public remoteContract;\\n    uint256 public minAmount;\\n\\n    event Mint(address indexed caller, uint256 indexed amount);\\n    event Redeem(address indexed caller, uint256 indexed amount);\\n\\n    function setRemoteContract(address _remoteContract) public onlyOwner {\\n        require(_remoteContract != address(0), \\\"Invalid remoteContract\\\");\\n        remoteContract = bytes32(uint256(uint160(_remoteContract)));\\n    }\\n\\n    function setMinAmount(uint256 _minAmount) public onlyOwner {\\n        require(_minAmount != 0, \\\"Invalid minAmount\\\");\\n        minAmount = _minAmount;\\n    }\\n\\n    function create_order(\\n        address assetAddress,\\n        uint256 amount,\\n        uint32 channel_id,\\n        uint64 dstGasForCall,\\n        bytes calldata adapterParams\\n    ) external payable {\\n        require(\\n            amount >= minAmount,\\n            \\\"amount too small\\\"\\n        );\\n\\n        address oft;\\n        address sender;\\n\\n        if (assetAddress == manta) {\\n            IERC20(assetAddress).transferFrom(_msgSender(), address(this), amount);\\n            IERC20(assetAddress).approve(mantaOFT, amount);\\n            oft = mantaOFT;\\n            sender = address(this);\\n        } else if(assetAddress == vMantaOFT) {\\n            oft = vMantaOFT;\\n            sender = _msgSender();\\n        } else {\\n            revert(\\\"Invalid assetAddress\\\");\\n        }\\n\\n        ICommonOFT.LzCallParams memory callParams = ICommonOFT.LzCallParams(\\n                payable(sender),\\n                address(0),\\n                adapterParams\\n            );\\n\\n        bytes memory payload = abi.encode(_msgSender(), channel_id);\\n        (uint256 estimateFee, ) = IOFTV2(oft).estimateSendAndCallFee(\\n            destChainId,\\n            remoteContract,\\n            amount,\\n            payload,\\n            dstGasForCall,\\n            false,\\n            adapterParams\\n        );\\n\\n        require(msg.value >= estimateFee, \\\"too small fee\\\");\\n        if (msg.value != estimateFee) {\\n            uint256 refundAmount = msg.value - estimateFee;\\n            (bool success, ) = _msgSender().call{value: refundAmount}(\\\"\\\");\\n            require(success, \\\"failed to refund\\\");\\n        }\\n\\n        IOFTV2(oft).sendAndCall{value: estimateFee}(\\n            sender,\\n            destChainId,\\n            remoteContract,\\n            amount,\\n            payload,\\n            dstGasForCall,\\n            callParams\\n        );\\n\\n        if (assetAddress == manta) {\\n            emit Mint(_msgSender(), amount);\\n        } else {\\n            emit Redeem(_msgSender(), amount);\\n        }\\n    }\\n\\n    function estimateSendAndCallFee(\\n        address assetAddress,\\n        uint256 amount,\\n        uint32 channel_id,\\n        uint64 dstGasForCall,\\n        bytes calldata adapterParams\\n    ) public view returns (uint256) {\\n        address oft;\\n\\n        if (assetAddress == manta) {\\n            oft = mantaOFT;\\n        } else if(assetAddress == vMantaOFT) {\\n            oft = vMantaOFT;\\n        } else {\\n            revert(\\\"Invalid assetAddress\\\");\\n        }\\n\\n        bytes memory payload = abi.encode(_msgSender(), channel_id);\\n        (uint256 estimateFee, ) = IOFTV2(oft).estimateSendAndCallFee(\\n            destChainId,\\n            remoteContract,\\n            amount,\\n            payload,\\n            dstGasForCall,\\n            false,\\n            adapterParams\\n        );\\n\\n        return estimateFee;\\n    }\\n}\\n\",\"keccak256\":\"0x1e8010ecf80da2a6c6292260ec4bf4fa17d08844f0e5530be09f2a640771f7c5\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/ICommonOFT.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Interface of the IOFT core standard\\n */\\ninterface ICommonOFT is IERC165 {\\n    struct LzCallParams {\\n        address payable refundAddress;\\n        address zroPaymentAddress;\\n        bytes adapterParams;\\n    }\\n\\n    /**\\n     * @dev estimate send token `_tokenId` to (`_dstChainId`, `_toAddress`)\\n     * _dstChainId - L0 defined chain id to send tokens too\\n     * _toAddress - dynamic bytes array which contains the address to whom you are sending tokens to on the dstChain\\n     * _amount - amount of the tokens to transfer\\n     * _useZro - indicates to use zro to pay L0 fees\\n     * _adapterParam - flexible bytes array to indicate messaging adapter services in L0\\n     */\\n    function estimateSendFee(\\n        uint16 _dstChainId,\\n        bytes32 _toAddress,\\n        uint _amount,\\n        bool _useZro,\\n        bytes calldata _adapterParams\\n    ) external view returns (uint nativeFee, uint zroFee);\\n\\n    function estimateSendAndCallFee(\\n        uint16 _dstChainId,\\n        bytes32 _toAddress,\\n        uint _amount,\\n        bytes calldata _payload,\\n        uint64 _dstGasForCall,\\n        bool _useZro,\\n        bytes calldata _adapterParams\\n    ) external view returns (uint nativeFee, uint zroFee);\\n\\n    /**\\n     * @dev returns the circulating amount of tokens on current chain\\n     */\\n    function circulatingSupply() external view returns (uint);\\n\\n    /**\\n     * @dev returns the address of the ERC20 token\\n     */\\n    function token() external view returns (address);\\n}\\n\",\"keccak256\":\"0x685586b87541a45bf6b634ef5e356a8968b3c23b33e929dec1807614db26cd6a\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/IOFTV2.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.10;\\n\\nimport \\\"./ICommonOFT.sol\\\";\\n\\n/**\\n * @dev Interface of the IOFT core standard\\n */\\ninterface IOFTV2 is ICommonOFT {\\n    /**\\n     * @dev send `_amount` amount of token to (`_dstChainId`, `_toAddress`) from `_from`\\n     * `_from` the owner of token\\n     * `_dstChainId` the destination chain identifier\\n     * `_toAddress` can be any size depending on the `dstChainId`.\\n     * `_amount` the quantity of tokens in wei\\n     * `_refundAddress` the address LayerZero refunds if too much message fee is sent\\n     * `_zroPaymentAddress` set to address(0x0) if not paying in ZRO (LayerZero Token)\\n     * `_adapterParams` is a flexible bytes array to indicate messaging adapter services\\n     */\\n    function sendFrom(\\n        address _from,\\n        uint16 _dstChainId,\\n        bytes32 _toAddress,\\n        uint _amount,\\n        LzCallParams calldata _callParams\\n    ) external payable;\\n\\n    function sendAndCall(\\n        address _from,\\n        uint16 _dstChainId,\\n        bytes32 _toAddress,\\n        uint _amount,\\n        bytes calldata _payload,\\n        uint64 _dstGasForCall,\\n        LzCallParams calldata _callParams\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0xd585b8f5c6b3569cd2d5d5d04345f17e9bf0d3f4ea4d0831cb4da6129629a555\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/Types.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.10;\\n\\ninterface Types {\\n    enum Operation {\\n        Mint,\\n        Redeem\\n    }\\n}\\n\",\"keccak256\":\"0x2c1400e68ac0c25b82495ea5b014f265784ba28000644290493915e04157ad15\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610dd38061007e6000396000f3fe6080604052600436106100c25760003560e01c8063897b06371161007f578063c0afb3f411610059578063c0afb3f4146101f6578063c4af1c0b14610216578063f01294531461023e578063f2fde38b1461026657600080fd5b8063897b0637146101a25780638da5cb5b146101c25780639b2cb5d8146101e057600080fd5b80630663b2d1146100c75780631e77ffca146100f057806329416368146101305780634a087e2c14610158578063715018a61461016d57806380b58c9214610182575b600080fd5b3480156100d357600080fd5b506100dd60015481565b6040519081526020015b60405180910390f35b3480156100fc57600080fd5b50610118737746ef546d562b443ae4b4145541a3b1a3d7571781565b6040516001600160a01b0390911681526020016100e7565b34801561013c57600080fd5b506101187395cef13441be50d20ca4558cc0a27b601ac544e581565b61016b610166366004610ae4565b610286565b005b34801561017957600080fd5b5061016b6107ac565b34801561018e57600080fd5b506100dd61019d366004610ae4565b6107c0565b3480156101ae57600080fd5b5061016b6101bd366004610ba5565b6108f2565b3480156101ce57600080fd5b506000546001600160a01b0316610118565b3480156101ec57600080fd5b506100dd60025481565b34801561020257600080fd5b5061016b610211366004610bbe565b610940565b34801561022257600080fd5b5061022b607e81565b60405161ffff90911681526020016100e7565b34801561024a57600080fd5b506101187317313ce6e47d796e61fdeac34ab1f58e3e08908281565b34801561027257600080fd5b5061016b610281366004610bbe565b6109a5565b6002548510156102d05760405162461bcd60e51b815260206004820152601060248201526f185b5bdd5b9d081d1bdbc81cdb585b1b60821b60448201526064015b60405180910390fd5b6000806001600160a01b0388167395cef13441be50d20ca4558cc0a27b601ac544e51415610425576001600160a01b0388166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018a90526064016020604051808303816000875af115801561035b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037f9190610be0565b5060405163095ea7b360e01b81527317313ce6e47d796e61fdeac34ab1f58e3e0890826004820152602481018890526001600160a01b0389169063095ea7b3906044016020604051808303816000875af11580156103e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104059190610be0565b507317313ce6e47d796e61fdeac34ab1f58e3e08908291503090506104a7565b6001600160a01b038816737746ef546d562b443ae4b4145541a3b1a3d7571714156104685750737746ef546d562b443ae4b4145541a3b1a3d757179050336104a7565b60405162461bcd60e51b8152602060048201526014602482015273496e76616c69642061737365744164647265737360601b60448201526064016102c7565b60006040518060600160405280836001600160a01b0316815260200160006001600160a01b0316815260200186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093909452509293509150339050604080516001600160a01b03909216602083015263ffffffff8a169082015260600160405160208183030381529060405290506000846001600160a01b031663a4c51df5607e6001548d868d60008e8e6040518963ffffffff1660e01b8152600401610585989796959493929190610c4f565b6040805180830381865afa1580156105a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c59190610cc8565b509050803410156106085760405162461bcd60e51b815260206004820152600d60248201526c746f6f20736d616c6c2066656560981b60448201526064016102c7565b8034146106ac57600061061b8234610cec565b604051909150600090339083908381818185875af1925050503d8060008114610660576040519150601f19603f3d011682016040523d82523d6000602084013e610665565b606091505b50509050806106a95760405162461bcd60e51b815260206004820152601060248201526f19985a5b1959081d1bc81c99599d5b9960821b60448201526064016102c7565b50505b846001600160a01b03166376203b488286607e6001548f888f8b6040518963ffffffff1660e01b81526004016106e89796959493929190610d11565b6000604051808303818588803b15801561070157600080fd5b505af1158015610715573d6000803e3d6000fd5b50505050506001600160a01b038b167395cef13441be50d20ca4558cc0a27b601ac544e51415610771576040518a9033907f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688590600090a361079f565b6040518a9033907f222838db2794d11532d940e8dec38ae307ed0b63cd97c233322e221f998767a690600090a35b5050505050505050505050565b6107b4610a1e565b6107be6000610a78565b565b6000806001600160a01b0388167395cef13441be50d20ca4558cc0a27b601ac544e5141561080357507317313ce6e47d796e61fdeac34ab1f58e3e08908261083f565b6001600160a01b038816737746ef546d562b443ae4b4145541a3b1a3d7571714156104685750737746ef546d562b443ae4b4145541a3b1a3d757175b6040805133602082015263ffffffff881681830152815180820383018152606082019283905260015463a4c51df560e01b909352916000916001600160a01b0385169163a4c51df5916108a391607e918e9088908e9089908f908f90606401610c4f565b6040805180830381865afa1580156108bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e39190610cc8565b509a9950505050505050505050565b6108fa610a1e565b8061093b5760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081b5a5b905b5bdd5b9d607a1b60448201526064016102c7565b600255565b610948610a1e565b6001600160a01b0381166109975760405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081c995b5bdd1950dbdb9d1c9858dd60521b60448201526064016102c7565b6001600160a01b0316600155565b6109ad610a1e565b6001600160a01b038116610a125760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102c7565b610a1b81610a78565b50565b6000546001600160a01b031633146107be5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102c7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610adf57600080fd5b919050565b60008060008060008060a08789031215610afd57600080fd5b610b0687610ac8565b955060208701359450604087013563ffffffff81168114610b2657600080fd5b9350606087013567ffffffffffffffff8082168214610b4457600080fd5b90935060808801359080821115610b5a57600080fd5b818901915089601f830112610b6e57600080fd5b813581811115610b7d57600080fd5b8a6020828501011115610b8f57600080fd5b6020830194508093505050509295509295509295565b600060208284031215610bb757600080fd5b5035919050565b600060208284031215610bd057600080fd5b610bd982610ac8565b9392505050565b600060208284031215610bf257600080fd5b81518015158114610bd957600080fd5b6000815180845260005b81811015610c2857602081850181015186830182015201610c0c565b81811115610c3a576000602083870101525b50601f01601f19169290920160200192915050565b61ffff8916815287602082015286604082015260e060608201526000610c7860e0830188610c02565b67ffffffffffffffff8716608084015285151560a084015282810360c0840152838152838560208301376000602085830101526020601f19601f8601168201019150509998505050505050505050565b60008060408385031215610cdb57600080fd5b505080516020909101519092909150565b600082821015610d0c57634e487b7160e01b600052601160045260246000fd5b500390565b600060018060a01b03808a16835261ffff8916602084015287604084015286606084015260e06080840152610d4960e0840187610c02565b67ffffffffffffffff861660a085015283810360c08501528185511681528160208601511660208201526040850151915060606040820152610d8e6060820183610c02565b9b9a505050505050505050505056fea264697066735822122041b0d4ad37f6a27d04c9179f3e081396e3c359cf2f2366ba0e3dbc7f84a949e364736f6c634300080a0033",
  "deployedBytecode": "0x6080604052600436106100c25760003560e01c8063897b06371161007f578063c0afb3f411610059578063c0afb3f4146101f6578063c4af1c0b14610216578063f01294531461023e578063f2fde38b1461026657600080fd5b8063897b0637146101a25780638da5cb5b146101c25780639b2cb5d8146101e057600080fd5b80630663b2d1146100c75780631e77ffca146100f057806329416368146101305780634a087e2c14610158578063715018a61461016d57806380b58c9214610182575b600080fd5b3480156100d357600080fd5b506100dd60015481565b6040519081526020015b60405180910390f35b3480156100fc57600080fd5b50610118737746ef546d562b443ae4b4145541a3b1a3d7571781565b6040516001600160a01b0390911681526020016100e7565b34801561013c57600080fd5b506101187395cef13441be50d20ca4558cc0a27b601ac544e581565b61016b610166366004610ae4565b610286565b005b34801561017957600080fd5b5061016b6107ac565b34801561018e57600080fd5b506100dd61019d366004610ae4565b6107c0565b3480156101ae57600080fd5b5061016b6101bd366004610ba5565b6108f2565b3480156101ce57600080fd5b506000546001600160a01b0316610118565b3480156101ec57600080fd5b506100dd60025481565b34801561020257600080fd5b5061016b610211366004610bbe565b610940565b34801561022257600080fd5b5061022b607e81565b60405161ffff90911681526020016100e7565b34801561024a57600080fd5b506101187317313ce6e47d796e61fdeac34ab1f58e3e08908281565b34801561027257600080fd5b5061016b610281366004610bbe565b6109a5565b6002548510156102d05760405162461bcd60e51b815260206004820152601060248201526f185b5bdd5b9d081d1bdbc81cdb585b1b60821b60448201526064015b60405180910390fd5b6000806001600160a01b0388167395cef13441be50d20ca4558cc0a27b601ac544e51415610425576001600160a01b0388166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018a90526064016020604051808303816000875af115801561035b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037f9190610be0565b5060405163095ea7b360e01b81527317313ce6e47d796e61fdeac34ab1f58e3e0890826004820152602481018890526001600160a01b0389169063095ea7b3906044016020604051808303816000875af11580156103e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104059190610be0565b507317313ce6e47d796e61fdeac34ab1f58e3e08908291503090506104a7565b6001600160a01b038816737746ef546d562b443ae4b4145541a3b1a3d7571714156104685750737746ef546d562b443ae4b4145541a3b1a3d757179050336104a7565b60405162461bcd60e51b8152602060048201526014602482015273496e76616c69642061737365744164647265737360601b60448201526064016102c7565b60006040518060600160405280836001600160a01b0316815260200160006001600160a01b0316815260200186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093909452509293509150339050604080516001600160a01b03909216602083015263ffffffff8a169082015260600160405160208183030381529060405290506000846001600160a01b031663a4c51df5607e6001548d868d60008e8e6040518963ffffffff1660e01b8152600401610585989796959493929190610c4f565b6040805180830381865afa1580156105a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c59190610cc8565b509050803410156106085760405162461bcd60e51b815260206004820152600d60248201526c746f6f20736d616c6c2066656560981b60448201526064016102c7565b8034146106ac57600061061b8234610cec565b604051909150600090339083908381818185875af1925050503d8060008114610660576040519150601f19603f3d011682016040523d82523d6000602084013e610665565b606091505b50509050806106a95760405162461bcd60e51b815260206004820152601060248201526f19985a5b1959081d1bc81c99599d5b9960821b60448201526064016102c7565b50505b846001600160a01b03166376203b488286607e6001548f888f8b6040518963ffffffff1660e01b81526004016106e89796959493929190610d11565b6000604051808303818588803b15801561070157600080fd5b505af1158015610715573d6000803e3d6000fd5b50505050506001600160a01b038b167395cef13441be50d20ca4558cc0a27b601ac544e51415610771576040518a9033907f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688590600090a361079f565b6040518a9033907f222838db2794d11532d940e8dec38ae307ed0b63cd97c233322e221f998767a690600090a35b5050505050505050505050565b6107b4610a1e565b6107be6000610a78565b565b6000806001600160a01b0388167395cef13441be50d20ca4558cc0a27b601ac544e5141561080357507317313ce6e47d796e61fdeac34ab1f58e3e08908261083f565b6001600160a01b038816737746ef546d562b443ae4b4145541a3b1a3d7571714156104685750737746ef546d562b443ae4b4145541a3b1a3d757175b6040805133602082015263ffffffff881681830152815180820383018152606082019283905260015463a4c51df560e01b909352916000916001600160a01b0385169163a4c51df5916108a391607e918e9088908e9089908f908f90606401610c4f565b6040805180830381865afa1580156108bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e39190610cc8565b509a9950505050505050505050565b6108fa610a1e565b8061093b5760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081b5a5b905b5bdd5b9d607a1b60448201526064016102c7565b600255565b610948610a1e565b6001600160a01b0381166109975760405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081c995b5bdd1950dbdb9d1c9858dd60521b60448201526064016102c7565b6001600160a01b0316600155565b6109ad610a1e565b6001600160a01b038116610a125760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102c7565b610a1b81610a78565b50565b6000546001600160a01b031633146107be5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102c7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610adf57600080fd5b919050565b60008060008060008060a08789031215610afd57600080fd5b610b0687610ac8565b955060208701359450604087013563ffffffff81168114610b2657600080fd5b9350606087013567ffffffffffffffff8082168214610b4457600080fd5b90935060808801359080821115610b5a57600080fd5b818901915089601f830112610b6e57600080fd5b813581811115610b7d57600080fd5b8a6020828501011115610b8f57600080fd5b6020830194508093505050509295509295509295565b600060208284031215610bb757600080fd5b5035919050565b600060208284031215610bd057600080fd5b610bd982610ac8565b9392505050565b600060208284031215610bf257600080fd5b81518015158114610bd957600080fd5b6000815180845260005b81811015610c2857602081850181015186830182015201610c0c565b81811115610c3a576000602083870101525b50601f01601f19169290920160200192915050565b61ffff8916815287602082015286604082015260e060608201526000610c7860e0830188610c02565b67ffffffffffffffff8716608084015285151560a084015282810360c0840152838152838560208301376000602085830101526020601f19601f8601168201019150509998505050505050505050565b60008060408385031215610cdb57600080fd5b505080516020909101519092909150565b600082821015610d0c57634e487b7160e01b600052601160045260246000fd5b500390565b600060018060a01b03808a16835261ffff8916602084015287604084015286606084015260e06080840152610d4960e0840187610c02565b67ffffffffffffffff861660a085015283810360c08501528185511681528160208601511660208201526040850151915060606040820152610d8e6060820183610c02565b9b9a505050505050505050505056fea264697066735822122041b0d4ad37f6a27d04c9179f3e081396e3c359cf2f2366ba0e3dbc7f84a949e364736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/MantaPacificSlpx.sol:MantaPacificSlpx",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 254,
        "contract": "contracts/MantaPacificSlpx.sol:MantaPacificSlpx",
        "label": "remoteContract",
        "offset": 0,
        "slot": "1",
        "type": "t_bytes32"
      },
      {
        "astId": 256,
        "contract": "contracts/MantaPacificSlpx.sol:MantaPacificSlpx",
        "label": "minAmount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}